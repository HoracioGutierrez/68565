https://ant.design/components
https://ant.design/components/flex#api
https://tailwindui.com/components/application-ui/navigation/navbars
https://mambaui.com/
https://lucide.dev/icons/
https://www.realtimecolors.com/


Componentes : 

- Son funciones 
- Arrancan en mayuscula
- tienen retorno si o si
- se pueden retornar muchos tipos de datos pero casi siempre es JSX
- no se puede retornar DOS o mas elementos JSX en simultaneo
- me permiten tener UI

Destructuring



Pre Entrega 1 : 

- Crear una carpeta "components" en la carpeta "src"

- Crear un archivo NavBar.jsx en la carpeta "components" que contenga el componente de NavBar : Tiene que mostrar un menu de links
- Crear un archivo CartWidget.jsx en la carpeta "components" que contenga el componente de CartWidget : Tiene que mostrar un icono de carrito o imagen de carrito
- Crear un archivo ItemListContainer.jsx en la carpeta "components" que contenga el componente de ItemListContainer : Tiene que mostrar un mensaje de bienvenida en pantalla usando props


- CartWidget va dentro de NavBar, osea que se importa en el archivo NavBar.jsx
- Navbar va dentro de App.jsx, osea que se importa en el archivo App.jsx
- ItemListContainer va dentro de App.jsx, osea que se importa en el archivo App.jsx




Hooks de React : 

Son todos funciones que arrancan con la palabra "use", solo se pueden ejecutar dentro de un componente tantas veces como quieras pero nunca dentro de un condicional/bucle

- useState
- useEffect
- useContext
- useRef
- useReducer
- useCallback
- useMemo
- useLayoutEffect
- useTransition



/*     
    
    const elResultadoDelHookEstado = useState(true) //[true,()=>{}]
    const miEstado = elResultadoDelHookEstado[0] //true
    const unaFuncion = elResultadoDelHookEstado[1] //()=>{}
    
    */

    console.log(elResultadoDelHookEstado)

    //Esto me permite tener una variable que si su valor cambia, cambia tambien el UI
    //Formula (sintaxis)
    //const [elEstado,setElEstado] = useState(valorInicial)

    //const toggleSidebar = true;

    //Quiero crear una constante llamada "contador" que valga lo que haya en el array que me devuelve el useState, en esa misma posicion del array, osea 0.
    //Quiero crear una constante llamada "setContador" que valga lo que haya en la posicion 1 del array que me devuelve el useState.
//contador = 1
    //contador++
    //contador = contador + 1
    //contador += 1